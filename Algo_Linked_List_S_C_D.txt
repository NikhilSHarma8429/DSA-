
Algorithms for Operations on Singly linked list:-
node is a structure contaning two variables,
data(contains value) and next(pointer to next node).
start points to address of first address(NULL at first).

I. Inserting a node at a given position-

1. 'a' Take position on which node is to be inserted(pos).
     'b' Take value of node(d).
2. Make a node(new),set new->data=d.
3. If pos==1 then set new->next=start,start=new
    Go to step 8.
    [end of if]
4. Set i=1,temp=start(struct type).
5. Repeat step 6 while i<(pos-1).
6. Set temp=temp->next and increament i.
    [end of loop]
7. Set new->next=temp->next and temp->next=new
8. Exit.

II. Traversing the linked list-

1. Set temp=start(struct type).
2. Repeat step 3 while temp!=NULL.
3. print temp->data and set temp=temp->next.
    [end of loop]
4.Exit.

III. Deleting a node at a given position-

1. Take position of which node is to be deleted(pos).
2. If pos==1 then set start=start->next.
    Go to step 7.
    [end of if]
3. Set i=1,temp=start(struct type).
4. Repeat step 5 while i<(pos-1).
5. Set temp=temp->next and increament i.
    [end of loop]
6. Set temp->next=temp->next->next
7. Exit.

IV. Searching an item in list-

1. Take item which is to be searched(item).
2. Set pos=1 and temp=start(struct type).
3. Repeat step 4 while temp!=NULL.
4. 'a' If temp->data==item then print position of item
         Go to step 6.
    'b' Else temp=temp->next and increament pos.
    [end of loop]
5. If not found print "Not Found".
6. Exit.


Algorithms for Operations on Circular linked list:-
node is a structure contaning two variables,
data(contains value) and next(pointer to next node).
start points to address of first address(NULL at first).

I. Inserting a node at a given position-

1. 'a' Take position on which node is to be inserted(pos).
     'b' Take value of node(d).
2. Make a node(new),set new->data=d.
3. If start==NULL then set new->next=new and start=new.
     Go to step 9.
    [end of if]
4. Set i=1,temp=start(struct type).
5. Repeat step 6 while i<(pos-1).
6. Set temp=temp->next and increament i.
    [end of loop]
7. Set new->next=temp->next and temp->next=new.
8. If pos==1 then set start=new.
    [end of if]
9. Exit.

II. Traversing the linked list-

1. Set temp=start(struct type).
2. Repeat step 3 while temp->next!=start.
3. print temp->data and set temp=temp->next.
    [end of loop]
4. print temp->data.
4.Exit.

III. Deleting a node at a given position-

1. Take position of which node is to be deleted(pos).
2. If start->next==start then set start=NULL.
    Go to step 7.
    [end of if]
3. Set i=1,temp=start(struct type).
4. Repeat step 5 while i<(pos-1).
5. Set temp=temp->next and increament i.
    [end of loop]
6. 'a' If pos==1 then set start=start->next.
    'b' Set temp->next=temp->next->next.
    [End of if-else]
7. Exit.

IV. Searching an item in list-

1. Take item which is to be searched(item).
2. Set pos=1 and temp=start(struct type).
3. Repeat step 4 while temp->next!=start.
4. 'a' If temp->data==item then print position of item
         Go to step 6.
    'b' Else temp=temp->next and increament pos.
    [end of loop]
5. If not found print "Not Found".
6. Exit.

Algorithms for Operations on Circular linked list:-
node is a structure contaning three variables,
prev(pointer to previous node),data(contains value) 
and next(pointer to next node).
start points to address of first address(NULL at first).

I. Inserting a node at a given position-

1. 'a' Take position on which node is to be inserted(pos).
     'b' Take value of node(d).
2. Make a node(new),set new->data=d.
3. If pos==1 then set new->prev==NULL,new->next=start,start=new
    Go to step 8.
    [end of if]
4. Set i=1,temp=start(struct type).
5. Repeat step 6 while i<(pos-1).
6. Set temp=temp->next and increament i.
    [end of loop]
7. Set new->prev=temp,new->next=temp->next,
    and temp->next=new.
8. Exit.

II. Traversing the linked list-

1. Set temp=start(struct type).
2. Repeat step 3 while temp!=NULL.
3. print temp->data and set temp=temp->next.
    [end of loop]
4.Exit.

III. Deleting a node at a given position-

1. Take position of which node is to be deleted(pos).
2. If pos==1 then set start=start->next.
    Go to step 7.
    [end of if]
3. Set i=1,temp=start(struct type).
4. Repeat step 5 while i<(pos-1).
5. Set temp=temp->next and increament i.
    [end of loop]
6. Set temp->next=temp->next->next
7. Exit.

IV. Searching an item in list-

1. Take item which is to be searched(item).
2. Set pos=1 and temp=start(struct type).
3. Repeat step 4 while temp!=NULL.
4. 'a' If temp->data==item then print position of item
         Go to step 6.
    'b' Else temp=temp->next and increament pos.
    [end of loop]
5. If not found print "Not Found".
6. Exit.